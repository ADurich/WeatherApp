{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nautcy\\\\Desktop\\\\WeatherApp\\\\src\\\\components\\\\Order.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Order() {\n  function handleSort(e) {\n    e.preventDefault();\n    /*let orderName = e.target.value === 'asc' ?\r\n                    citiesInfo.cities.sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (b.name > a.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    }) :\r\n                    citiesInfo.cities.sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return -1;\r\n                        }\r\n                        if (b.name > a.name) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n      setCitiesInfo({\r\n                  ...citiesInfo,\r\n                  cities:orderName                                        \r\n                  })*/\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: e => handleSort(e),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"asc\",\n      children: \"Ascendente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"desc\",\n      children: \"Descendiente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 4\n  }, this);\n}\n_c = Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["C:/Users/Nautcy/Desktop/WeatherApp/src/components/Order.jsx"],"names":["React","Order","handleSort","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAE/B,WAASC,UAAT,CAAoBC,CAApB,EAAsB;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGG;;AAGF,sBAEE;AAAQ,IAAA,QAAQ,EAAKD,CAAD,IAAOD,UAAU,CAACC,CAAD,CAArC;AAAA,4BACQ;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AASA;KAzCuBF,K","sourcesContent":["import React from 'react';\r\n\r\nexport default function Order() {\r\n\r\n\tfunction handleSort(e){\r\n    e.preventDefault()\r\n    /*let orderName = e.target.value === 'asc' ?\r\n                    citiesInfo.cities.sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return 1;\r\n                        }\r\n                        if (b.name > a.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    }) :\r\n                    citiesInfo.cities.sort(function (a, b) {\r\n                        if (a.name > b.name) {\r\n                            return -1;\r\n                        }\r\n                        if (b.name > a.name) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n\r\n    setCitiesInfo({\r\n                  ...citiesInfo,\r\n                  cities:orderName                                        \r\n                  })*/                \r\n     \r\n  }\r\n\r\n\r\n\treturn(\r\n\r\n\t\t\t<select onChange = {(e) => handleSort(e)}>\r\n\t          <option value=\"asc\">Ascendente</option>\r\n\t          <option value=\"desc\">Descendiente</option>\r\n\t        </select>\r\n\r\n\t\t)\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}