{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nautcy\\\\Documents\\\\FT-M2\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\components\\\\Nav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Logo from '../logoHenry.png';\nimport './Nav.css';\nimport Cards from \"./Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nexport default function Nav() {\n  _s();\n\n  const [nameCity, setNameCity] = useState(\"\");\n  const [citiesInfo, setCitiesInfo] = useState({\n    cities: []\n  });\n  const API_KEY = '4ae2636d8dfbdc3044bede63951a019b';\n  var repeatedState = true; //[4, 3, 2, 5, 11]\n\n  function maxValue(array) {\n    var maxGain = 0;\n\n    for (let i = 0; i < array.length; i++) {\n      for (let j = 0; j < array.length - 1; j++) {\n        if (array[i] < array[j + 1]) {\n          let differenceGain = array[j + 1] - array[i];\n\n          if (differenceGain > maxGain) {\n            maxGain = differenceGain;\n          }\n        }\n      }\n    }\n\n    console.log(\"la mayor ganancia que genero es: \", maxGain);\n  }\n\n  function handleInputChange(e) {\n    e.preventDefault();\n    setNameCity(e.target.value);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const infoWeather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${nameCity}&appid=${API_KEY}&units=metric`); //el nombre que pongo como input puede estar tanto en inglés como en español(imagino que también en otros) y en minúsculas.\n      //Los que tengan dos o más palabras se ponen así y automáticamente la api les agrega el %20. Osea, obtengo la respuesta.\n      //el cambiar el lenguaje cuando hago la llamada solo modifica el campo descripcion y el nombre\n\n      citiesInfo.cities.map(el => {\n        if (nameCity === el.name) {\n          repeatedState = false;\n        }\n      });\n\n      if (repeatedState) {\n        setCitiesInfo({ ...citiesInfo,\n          cities: [...citiesInfo.cities, {\n            name: infoWeather.data.name,\n            id: infoWeather.data.id,\n            min: Math.round(infoWeather.data.main.temp_min),\n            max: Math.round(infoWeather.data.main.temp_max),\n            img: infoWeather.data.weather[0].icon\n          }]\n        });\n        console.log(citiesInfo.cities);\n      }\n    } catch (error) {\n      console.log(error);\n      alert(\"Colocar un ciudad que exista\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mr-sm-2\",\n          type: \"text\",\n          placeholder: \"Ciudad...\",\n          \"aria-label\": \"Search\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success my-2 my-sm-0\",\n          type: \"submit\",\n          onClick: e => handleSubmit(e),\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: citiesInfo.cities.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"closeIcon\",\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function onClose(e) {\n              let nameCities = citiesInfo.cities.filter(c => c.id !== el.id);\n              setCitiesInfo({ ...citiesInfo,\n                cities: nameCities\n              });\n              console.log(\"las ciudades que tengo son: \", nameCities);\n            },\n            className: \"btn btn-sm btn-danger\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: el.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-4 col-md-4 col-lg-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [el.min, \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-4 col-md-4 col-lg-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [el.max, \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-4 col-md-4 col-lg-4\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"iconoClima\",\n                src: \"http://openweathermap.org/img/wn/\" + el.img + \"@2x.png\",\n                width: \"80\",\n                height: \"80\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: maxValue([4, 3, 2, 5, 11])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"2U/mutXIlVgobJJqDuUJFqrblog=\");\n\n_c = Nav;\n;\n/*\r\n\r\nlet cityInfo=await infoWeather.data.map((el)=>{\r\n      return {\r\n        name:el.name,\r\n        id:el.id,\r\n        min:Math.round(el.main.temp_min),\r\n        max:Math.round(el.main.temp_max),\r\n        img:el.weather[0].icon\r\n      }\r\n    })\r\n    */\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["C:/Users/Nautcy/Documents/FT-M2/08-React-Estado-LifeCycle/homework/src/components/Nav.jsx"],"names":["React","useState","Logo","Cards","axios","require","Nav","nameCity","setNameCity","citiesInfo","setCitiesInfo","cities","API_KEY","repeatedState","maxValue","array","maxGain","i","length","j","differenceGain","console","log","handleInputChange","e","preventDefault","target","value","handleSubmit","infoWeather","get","map","el","name","data","id","min","Math","round","main","temp_min","max","temp_max","img","weather","icon","error","alert","onClose","nameCities","filter","c"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport Logo from '../logoHenry.png'\r\nimport './Nav.css';\r\nimport Cards from \"./Cards\";\r\nconst axios= require('axios');\r\n\r\nexport default function Nav() {\r\n\r\n  const [nameCity,setNameCity] = useState(\"\") \r\n  const [citiesInfo,setCitiesInfo] = useState({cities:[]})  \r\n  const API_KEY='4ae2636d8dfbdc3044bede63951a019b'  \r\n  var repeatedState=true\r\n\r\n  //[4, 3, 2, 5, 11]\r\n  function maxValue(array){\r\n    var maxGain=0;\r\n\r\n    for(let i=0;i<(array.length);i++){\r\n      for(let j=0;j<(array.length)-1;j++){\r\n        if(array[i]<array[j+1]){\r\n          let differenceGain=array[j+1]-array[i]\r\n          if(differenceGain>maxGain){\r\n            maxGain=differenceGain\r\n          }\r\n        }\r\n        \r\n      }\r\n\r\n    }\r\n\r\n    console.log(\"la mayor ganancia que genero es: \",maxGain)\r\n  }\r\n  function handleInputChange(e){\r\n    e.preventDefault() \r\n    setNameCity(e.target.value) \r\n  }\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault(); \r\n    try{\r\n      const infoWeather=await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${nameCity}&appid=${API_KEY}&units=metric`);\r\n      //el nombre que pongo como input puede estar tanto en inglés como en español(imagino que también en otros) y en minúsculas.\r\n    //Los que tengan dos o más palabras se ponen así y automáticamente la api les agrega el %20. Osea, obtengo la respuesta.\r\n    //el cambiar el lenguaje cuando hago la llamada solo modifica el campo descripcion y el nombre\r\n\r\n    citiesInfo.cities.map(el=>{\r\n      if(nameCity===el.name){\r\n        repeatedState=false\r\n      }\r\n    })\r\n\r\n    if(repeatedState){\r\n      setCitiesInfo({\r\n          ...citiesInfo,\r\n          cities:[...citiesInfo.cities,\r\n                  {\r\n                    name:infoWeather.data.name,\r\n                    id:infoWeather.data.id,\r\n                    min:Math.round(infoWeather.data.main.temp_min),\r\n                    max:Math.round(infoWeather.data.main.temp_max),\r\n                    img: infoWeather.data.weather[0].icon\r\n                  }\r\n                ]         \r\n        })\r\n    console.log(citiesInfo.cities)\r\n    }\r\n    \r\n    }catch(error){\r\n      console.log(error)\r\n      alert(\"Colocar un ciudad que exista\")\r\n    }\r\n    \r\n  }  \r\n\r\n\r\n  return (\r\n    <div>\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n          <form className=\"form-inline\">\r\n            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Ciudad...\" aria-label=\"Search\" onChange = {(e) => handleInputChange(e)}/>\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={e => handleSubmit(e)}>Agregar</button>\r\n          </form>\r\n        </nav> \r\n         <div className='cards'>\r\n            {citiesInfo.cities.map(el => \r\n                <div className=\"card\">\r\n                  <div id=\"closeIcon\" className=\"row\">\r\n                      <button onClick={function onClose(e){\r\n                      let nameCities=citiesInfo.cities.filter(c=> c.id!==el.id)\r\n                      setCitiesInfo({\r\n                            ...citiesInfo,\r\n                            cities:nameCities                                        \r\n                          })\r\n                      console.log(\"las ciudades que tengo son: \",nameCities)\r\n                      }} className=\"btn btn-sm btn-danger\">X</button>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{el.name}</h5>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                        <p>Min</p>\r\n                        <p>{el.min}°</p>\r\n                      </div>\r\n                      <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                        <p>Max</p>\r\n                        <p>{el.max}°</p>\r\n                      </div>\r\n                      <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                        <img className=\"iconoClima\" src={\"http://openweathermap.org/img/wn/\"+el.img+\"@2x.png\"} width=\"80\" height=\"80\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n             )}\r\n         </div>  \r\n         <div>{maxValue([4,3,2,5,11])}</div>        \r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n\r\nlet cityInfo=await infoWeather.data.map((el)=>{\r\n      return {\r\n        name:el.name,\r\n        id:el.id,\r\n        min:Math.round(el.main.temp_min),\r\n        max:Math.round(el.main.temp_max),\r\n        img:el.weather[0].icon\r\n      }\r\n    })\r\n    */"]},"metadata":{},"sourceType":"module"}