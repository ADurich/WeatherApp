{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nautcy\\\\Desktop\\\\WeatherApp\\\\src\\\\components\\\\Nav.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Nav.css';\nimport Cards from './Cards.jsx';\nimport Order from './Order.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nexport default function Nav() {\n  _s();\n\n  console.log(Order.hola);\n  const [nameCity, setNameCity] = useState(\"\");\n  const [citiesInfo, setCitiesInfo] = useState({\n    cities: []\n  });\n  const API_KEY = '4ae2636d8dfbdc3044bede63951a019b';\n  var repeatedState = true;\n  /*[4,[2, 5, 11],3,[1,3,4]]\r\n  function sumMultArray(array){\r\n    var sumTotal=0\r\n    for(let i=0;i<array.length;i++){\r\n       if(Array.isArray(array[i])){\r\n        sumTotal=sumTotal+sumMultArray(array[i])\r\n       }else{\r\n        sumTotal=sumTotal+array[i]\r\n       }\r\n    }\r\n    return sumTotal\r\n  }*/\n\n  function handleInputChange(e) {\n    e.preventDefault();\n    setNameCity(e.target.value);\n  }\n\n  function handleSortTemp(e) {\n    e.preventDefault();\n    let orderTemp = e.target.value === 'min' ? citiesInfo.cities.sort(function (a, b) {\n      if (a.temp > b.temp) {\n        return 1;\n      }\n\n      if (b.temp > a.temp) {\n        return -1;\n      }\n\n      return 0;\n    }) : citiesInfo.cities.sort(function (a, b) {\n      if (a.temp > b.temp) {\n        return -1;\n      }\n\n      if (b.temp > a.temp) {\n        return 1;\n      }\n\n      return 0;\n    });\n    setCitiesInfo({ ...citiesInfo,\n      cities: orderTemp\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      const infoWeather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${nameCity}&appid=${API_KEY}&units=metric`); //el nombre que pongo como input puede estar tanto en inglés como en español(imagino que también en otros) y en minúsculas.\n      //Los que tengan dos o más palabras se ponen así y automáticamente la api les agrega el %20. Osea, obtengo la respuesta.\n      //el cambiar el lenguaje cuando hago la llamada solo modifica el campo descripcion y el nombre\n\n      citiesInfo.cities.map(el => {\n        if (nameCity === el.name) {\n          repeatedState = false;\n        }\n      });\n\n      if (repeatedState) {\n        setCitiesInfo({ ...citiesInfo,\n          cities: [...citiesInfo.cities, {\n            name: infoWeather.data.name,\n            id: infoWeather.data.id,\n            temp: Math.round(infoWeather.data.main.temp),\n            min: Math.round(infoWeather.data.main.temp_min),\n            max: Math.round(infoWeather.data.main.temp_max),\n            img: infoWeather.data.weather[0].icon\n          }]\n        });\n      }\n\n      setNameCity(\"\");\n    } catch (error) {\n      console.log(error);\n      alert(\"Colocar un ciudad que exista\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleSortTemp(e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"min\",\n        children: \"M\\xEDnimo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"max\",\n        children: \"M\\xE1ximo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      id: \"navbar\",\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: nameCity,\n          className: \"form-control mr-sm-2\",\n          type: \"text\",\n          placeholder: \"Ciudad...\",\n          \"aria-label\": \"Search\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success my-2 my-sm-0\",\n          type: \"submit\",\n          onClick: e => handleSubmit(e),\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: citiesInfo.cities.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-4 col-md-4 col-lg-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          id: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"closeIcon\",\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: function onClose(e) {\n                let nameCities = citiesInfo.cities.filter(c => c.id !== el.id);\n                setCitiesInfo({ ...citiesInfo,\n                  cities: nameCities\n                });\n              },\n              className: \"btn btn-sm btn-danger\",\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: el.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [el.temp, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4 col-md-4 col-lg-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Min\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [el.min, \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4 col-md-4 col-lg-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Max\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [el.max, \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4 col-md-4 col-lg-4\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"iconoClima\",\n                  src: \"http://openweathermap.org/img/wn/\" + el.img + \"@2x.png\",\n                  width: \"80\",\n                  height: \"80\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Nav, \"2U/mutXIlVgobJJqDuUJFqrblog=\");\n\n_c = Nav;\n;\n/*\r\n\r\nlet cityInfo=await infoWeather.data.map((el)=>{\r\n      return {\r\n        name:el.name,\r\n        id:el.id,\r\n        min:Math.round(el.main.temp_min),\r\n        max:Math.round(el.main.temp_max),\r\n        img:el.weather[0].icon\r\n      }\r\n    })\r\n    */\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["C:/Users/Nautcy/Desktop/WeatherApp/src/components/Nav.jsx"],"names":["React","useState","Cards","Order","axios","require","Nav","console","log","hola","nameCity","setNameCity","citiesInfo","setCitiesInfo","cities","API_KEY","repeatedState","handleInputChange","e","preventDefault","target","value","handleSortTemp","orderTemp","sort","a","b","temp","handleSubmit","infoWeather","get","map","el","name","data","id","Math","round","main","min","temp_min","max","temp_max","img","weather","icon","error","alert","onClose","nameCities","filter","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AACA,MAAMC,KAAK,GAAEC,OAAO,CAAC,OAAD,CAApB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,IAAlB;AACA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACW,UAAD,EAAYC,aAAZ,IAA6BZ,QAAQ,CAAC;AAACa,IAAAA,MAAM,EAAC;AAAR,GAAD,CAA3C;AACA,QAAMC,OAAO,GAAC,kCAAd;AACA,MAAIC,aAAa,GAAC,IAAlB;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAASC,iBAAT,CAA2BC,CAA3B,EAA6B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,WAAW,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX;AACD;;AAID,WAASC,cAAT,CAAwBJ,CAAxB,EAA0B;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAII,SAAS,GAAGL,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,KAAnB,GACAT,UAAU,CAACE,MAAX,CAAkBU,IAAlB,CAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACnC,UAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjB,eAAO,CAAP;AACH;;AACD,UAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;AACjB,eAAO,CAAC,CAAR;AACH;;AACD,aAAO,CAAP;AACH,KARD,CADA,GAUAf,UAAU,CAACE,MAAX,CAAkBU,IAAlB,CAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACnC,UAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AACjB,eAAO,CAAC,CAAR;AACH;;AACD,UAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;AACjB,eAAO,CAAP;AACH;;AACD,aAAO,CAAP;AACH,KARD,CAVhB;AAoBAd,IAAAA,aAAa,CAAC,EACA,GAAGD,UADH;AAEAE,MAAAA,MAAM,EAACS;AAFP,KAAD,CAAb;AAID;;AAED,iBAAeK,YAAf,CAA4BV,CAA5B,EAA8B;AAC5BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAG;AACD,YAAMU,WAAW,GAAC,MAAMzB,KAAK,CAAC0B,GAAN,CAAW,qDAAoDpB,QAAS,UAASK,OAAQ,eAAzF,CAAxB,CADC,CAED;AACF;AACA;;AAEAH,MAAAA,UAAU,CAACE,MAAX,CAAkBiB,GAAlB,CAAsBC,EAAE,IAAE;AACxB,YAAGtB,QAAQ,KAAGsB,EAAE,CAACC,IAAjB,EAAsB;AACpBjB,UAAAA,aAAa,GAAC,KAAd;AACD;AACF,OAJD;;AAMA,UAAGA,aAAH,EAAiB;AACfH,QAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEVE,UAAAA,MAAM,EAAC,CAAC,GAAGF,UAAU,CAACE,MAAf,EACC;AACEmB,YAAAA,IAAI,EAACJ,WAAW,CAACK,IAAZ,CAAiBD,IADxB;AAEEE,YAAAA,EAAE,EAACN,WAAW,CAACK,IAAZ,CAAiBC,EAFtB;AAGER,YAAAA,IAAI,EAACS,IAAI,CAACC,KAAL,CAAWR,WAAW,CAACK,IAAZ,CAAiBI,IAAjB,CAAsBX,IAAjC,CAHP;AAIEY,YAAAA,GAAG,EAACH,IAAI,CAACC,KAAL,CAAWR,WAAW,CAACK,IAAZ,CAAiBI,IAAjB,CAAsBE,QAAjC,CAJN;AAKEC,YAAAA,GAAG,EAACL,IAAI,CAACC,KAAL,CAAWR,WAAW,CAACK,IAAZ,CAAiBI,IAAjB,CAAsBI,QAAjC,CALN;AAMEC,YAAAA,GAAG,EAAEd,WAAW,CAACK,IAAZ,CAAiBU,OAAjB,CAAyB,CAAzB,EAA4BC;AANnC,WADD;AAFG,SAAD,CAAb;AAaD;;AACClC,MAAAA,WAAW,CAAC,EAAD,CAAX;AAED,KA7BD,CA6BC,OAAMmC,KAAN,EAAY;AACXvC,MAAAA,OAAO,CAACC,GAAR,CAAYsC,KAAZ;AACAC,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AAEF;;AAGD,sBACE;AAAA,4BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,QAAQ,EAAK7B,CAAD,IAAOI,cAAc,CAACJ,CAAD,CAAzC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAiB,MAAA,SAAS,EAAC,8BAA3B;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,gCACE;AAAO,UAAA,KAAK,EAAER,QAAd;AAAwB,UAAA,SAAS,EAAC,sBAAlC;AAAyD,UAAA,IAAI,EAAC,MAA9D;AAAqE,UAAA,WAAW,EAAC,WAAjF;AAA6F,wBAAW,QAAxG;AAAiH,UAAA,QAAQ,EAAKQ,CAAD,IAAOD,iBAAiB,CAACC,CAAD;AAArJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,sCAAlB;AAAyD,UAAA,IAAI,EAAC,QAA9D;AAAuE,UAAA,OAAO,EAAEA,CAAC,IAAIU,YAAY,CAACV,CAAD,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANJ,eAYK;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACIN,UAAU,CAACE,MAAX,CAAkBiB,GAAlB,CAAsBC,EAAE,iBACvB;AAAiB,QAAA,SAAS,EAAC,4BAA3B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,EAAE,EAAC,MAAzB;AAAA,kCACE;AAAK,YAAA,EAAE,EAAC,WAAR;AAAoB,YAAA,SAAS,EAAC,KAA9B;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAE,SAASgB,OAAT,CAAiB9B,CAAjB,EAAmB;AACpC,oBAAI+B,UAAU,GAACrC,UAAU,CAACE,MAAX,CAAkBoC,MAAlB,CAAyBC,CAAC,IAAGA,CAAC,CAAChB,EAAF,KAAOH,EAAE,CAACG,EAAvC,CAAf;AACAtB,gBAAAA,aAAa,CAAC,EACR,GAAGD,UADK;AAERE,kBAAAA,MAAM,EAACmC;AAFC,iBAAD,CAAb;AAIC,eAND;AAMG,cAAA,SAAS,EAAC,uBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BjB,EAAE,CAACC;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,yBAAKD,EAAE,CAACL,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,6BAAIK,EAAE,CAACO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,6BAAIP,EAAE,CAACS,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eASE;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAA4B,kBAAA,GAAG,EAAE,sCAAoCT,EAAE,CAACW,GAAvC,GAA2C,SAA5E;AAAuF,kBAAA,KAAK,EAAC,IAA7F;AAAkG,kBAAA,MAAM,EAAC,IAAzG;AAA8G,kBAAA,GAAG,EAAC;AAAlH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAUX,EAAE,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,cADD;AADJ;AAAA;AAAA;AAAA;AAAA,YAZL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GA/IuB7B,G;;KAAAA,G;AA+IvB;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React,{useState} from 'react';\r\nimport './Nav.css';\r\nimport Cards from './Cards.jsx'\r\nimport Order from './Order.jsx'\r\nconst axios= require('axios');\r\n\r\nexport default function Nav() {\r\n\r\n  console.log(Order.hola)\r\n  const [nameCity,setNameCity] = useState(\"\") \r\n  const [citiesInfo,setCitiesInfo] = useState({cities:[]})  \r\n  const API_KEY='4ae2636d8dfbdc3044bede63951a019b'  \r\n  var repeatedState=true\r\n\r\n  /*[4,[2, 5, 11],3,[1,3,4]]\r\n  function sumMultArray(array){\r\n    var sumTotal=0\r\n    for(let i=0;i<array.length;i++){\r\n       if(Array.isArray(array[i])){\r\n        sumTotal=sumTotal+sumMultArray(array[i])\r\n       }else{\r\n        sumTotal=sumTotal+array[i]\r\n       }\r\n    }\r\n    return sumTotal\r\n  }*/\r\n  function handleInputChange(e){\r\n    e.preventDefault() \r\n    setNameCity(e.target.value) \r\n  }\r\n\r\n  \r\n\r\n  function handleSortTemp(e){\r\n    e.preventDefault() \r\n    let orderTemp = e.target.value === 'min' ?\r\n                    citiesInfo.cities.sort(function (a, b) {\r\n                        if (a.temp > b.temp) {\r\n                            return 1;\r\n                        }\r\n                        if (b.temp > a.temp) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    }) :\r\n                    citiesInfo.cities.sort(function (a, b) {\r\n                        if (a.temp > b.temp) {\r\n                            return -1;\r\n                        }\r\n                        if (b.temp > a.temp) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n\r\n    setCitiesInfo({\r\n                  ...citiesInfo,\r\n                  cities:orderTemp                                        \r\n                  })\r\n  }\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault(); \r\n    try{\r\n      const infoWeather=await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${nameCity}&appid=${API_KEY}&units=metric`);\r\n      //el nombre que pongo como input puede estar tanto en inglés como en español(imagino que también en otros) y en minúsculas.\r\n    //Los que tengan dos o más palabras se ponen así y automáticamente la api les agrega el %20. Osea, obtengo la respuesta.\r\n    //el cambiar el lenguaje cuando hago la llamada solo modifica el campo descripcion y el nombre\r\n\r\n    citiesInfo.cities.map(el=>{\r\n      if(nameCity===el.name){\r\n        repeatedState=false\r\n      }\r\n    })\r\n\r\n    if(repeatedState){\r\n      setCitiesInfo({\r\n          ...citiesInfo,\r\n          cities:[...citiesInfo.cities,\r\n                  {\r\n                    name:infoWeather.data.name,\r\n                    id:infoWeather.data.id,\r\n                    temp:Math.round(infoWeather.data.main.temp),\r\n                    min:Math.round(infoWeather.data.main.temp_min),\r\n                    max:Math.round(infoWeather.data.main.temp_max),\r\n                    img: infoWeather.data.weather[0].icon\r\n                  }\r\n                ]         \r\n        })\r\n    }\r\n      setNameCity(\"\");\r\n      \r\n    }catch(error){\r\n      console.log(error)\r\n      alert(\"Colocar un ciudad que exista\")\r\n    }\r\n    \r\n  }  \r\n\r\n\r\n  return (\r\n    <div>\r\n        <Order/>\r\n        <select onChange = {(e) => handleSortTemp(e)}>\r\n          <option value=\"min\">Mínimo</option>\r\n          <option value=\"max\">Máximo</option>\r\n        </select>\r\n        <nav id=\"navbar\" className=\"navbar navbar-light bg-light\">\r\n          <form className=\"form-inline\">\r\n            <input value={nameCity} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Ciudad...\" aria-label=\"Search\" onChange = {(e) => handleInputChange(e)}/>\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={e => handleSubmit(e)}>Agregar</button>\r\n          </form>\r\n        </nav> \r\n         <div className='cards'>\r\n            {citiesInfo.cities.map(el => \r\n              <div key={el.id} className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                <div className=\"card\" id=\"card\">\r\n                  <div id=\"closeIcon\" className=\"row\">\r\n                      <button onClick={function onClose(e){\r\n                      let nameCities=citiesInfo.cities.filter(c=> c.id!==el.id)\r\n                      setCitiesInfo({\r\n                            ...citiesInfo,\r\n                            cities:nameCities                                        \r\n                          })\r\n                      }} className=\"btn btn-sm btn-danger\">X</button>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{el.name}</h5>\r\n                    <h2>{el.temp}°</h2>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                        <p>Min</p>\r\n                        <p>{el.min}°</p>\r\n                      </div>\r\n                      <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                        <p>Max</p>\r\n                        <p>{el.max}°</p>\r\n                      </div>\r\n                      <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                        <img className=\"iconoClima\" src={\"http://openweathermap.org/img/wn/\"+el.img+\"@2x.png\"} width=\"80\" height=\"80\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>  \r\n             )}\r\n         </div>      \r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n\r\nlet cityInfo=await infoWeather.data.map((el)=>{\r\n      return {\r\n        name:el.name,\r\n        id:el.id,\r\n        min:Math.round(el.main.temp_min),\r\n        max:Math.round(el.main.temp_max),\r\n        img:el.weather[0].icon\r\n      }\r\n    })\r\n    */"]},"metadata":{},"sourceType":"module"}