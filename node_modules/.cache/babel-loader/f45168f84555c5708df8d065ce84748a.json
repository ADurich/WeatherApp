{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nautcy\\\\Documents\\\\FT-M2\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\components\\\\Nav.jsx\";\nimport React, { useState } from 'react';\nimport Logo from '../logoHenry.png';\nimport './Nav.css';\nimport Cards from \"./Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nexport default function Nav(_ref) {\n  let {\n    handleSubmit\n  } = _ref;\n\n  //const [nameCity,setNameCity] = useState(\"\") \n  //const [add,setAdd] = useState(\"\")\n  //const [citiesInfo,setCitiesInfo] = useState({cities:[]})  \n  //const API_KEY='4ae2636d8dfbdc3044bede63951a019b'\n  function handleInputChange(e) {\n    e.preventDefault();\n    setNameCity(e.target.value);\n  }\n  /*\r\n  async function handleSubmit(e){\r\n    e.preventDefault(); \r\n    const infoWeather=await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${nameCity}&appid=${API_KEY}&units=metric`);\r\n    setCitiesInfo({\r\n          ...citiesInfo,\r\n          cities:[...citiesInfo.cities,\r\n                  {\r\n                    name:infoWeather.data.name,\r\n                    id:infoWeather.data.id,\r\n                    min:Math.round(infoWeather.data.main.temp_min),\r\n                    max:Math.round(infoWeather.data.main.temp_max),\r\n                    img: infoWeather.data.weather[0].icon\r\n                  }\r\n                ]         \r\n        })\r\n      setAdd(\"added\")\r\n  }  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mr-sm-2\",\n          type: \"text\",\n          placeholder: \"Ciudad...\",\n          \"aria-label\": \"Search\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success my-2 my-sm-0\",\n          type: \"submit\",\n          onClick: e => handleSubmit(e),\n          children: \"Agregar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), add ? /*#__PURE__*/_jsxDEV(Cards, {\n      cities: citiesInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c = Nav;\n;\n/*\r\n\r\nlet cityInfo=await infoWeather.data.map((el)=>{\r\n      return {\r\n        name:el.name,\r\n        id:el.id,\r\n        min:Math.round(el.main.temp_min),\r\n        max:Math.round(el.main.temp_max),\r\n        img:el.weather[0].icon\r\n      }\r\n    })\r\n    */\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["C:/Users/Nautcy/Documents/FT-M2/08-React-Estado-LifeCycle/homework/src/components/Nav.jsx"],"names":["React","useState","Logo","Cards","axios","require","Nav","handleSubmit","handleInputChange","e","preventDefault","setNameCity","target","value","add","citiesInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,MAAMC,KAAK,GAAEC,OAAO,CAAC,OAAD,CAApB;;AAEA,eAAe,SAASC,GAAT,OAA6B;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;;AAE1C;AACA;AACA;AACA;AAGA,WAASC,iBAAT,CAA2BC,CAA3B,EAA6B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,WAAW,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAX;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,sBACE;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,sBAAjB;AAAwC,UAAA,IAAI,EAAC,MAA7C;AAAoD,UAAA,WAAW,EAAC,WAAhE;AAA4E,wBAAW,QAAvF;AAAgG,UAAA,QAAQ,EAAKJ,CAAD,IAAOD,iBAAiB,CAACC,CAAD;AAApI;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,sCAAlB;AAAyD,UAAA,IAAI,EAAC,QAA9D;AAAwE,UAAA,OAAO,EAAEA,CAAC,IAAIF,YAAY,CAACE,CAAD,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,EAOKK,GAAG,gBACH,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEC;AAAf;AAAA;AAAA;AAAA;AAAA,YADG,GAEH,IATL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KA9CuBT,G;AA8CvB;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React,{useState} from 'react';\r\nimport Logo from '../logoHenry.png'\r\nimport './Nav.css';\r\nimport Cards from \"./Cards\";\r\nconst axios= require('axios');\r\n\r\nexport default function Nav({handleSubmit}) {\r\n\r\n  //const [nameCity,setNameCity] = useState(\"\") \r\n  //const [add,setAdd] = useState(\"\")\r\n  //const [citiesInfo,setCitiesInfo] = useState({cities:[]})  \r\n  //const API_KEY='4ae2636d8dfbdc3044bede63951a019b'\r\n\r\n\r\n  function handleInputChange(e){\r\n    e.preventDefault() \r\n    setNameCity(e.target.value) \r\n  }\r\n\r\n  /*\r\n  async function handleSubmit(e){\r\n    e.preventDefault(); \r\n    const infoWeather=await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${nameCity}&appid=${API_KEY}&units=metric`);\r\n    setCitiesInfo({\r\n          ...citiesInfo,\r\n          cities:[...citiesInfo.cities,\r\n                  {\r\n                    name:infoWeather.data.name,\r\n                    id:infoWeather.data.id,\r\n                    min:Math.round(infoWeather.data.main.temp_min),\r\n                    max:Math.round(infoWeather.data.main.temp_max),\r\n                    img: infoWeather.data.weather[0].icon\r\n                  }\r\n                ]         \r\n        })\r\n\r\n    setAdd(\"added\")\r\n  }  */\r\n\r\n  return (\r\n    <div>\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n          <form className=\"form-inline\">\r\n            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Ciudad...\" aria-label=\"Search\" onChange = {(e) => handleInputChange(e)}/>\r\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\"  onClick={e => handleSubmit(e)}>Agregar</button>\r\n          </form>\r\n        </nav> \r\n        {add ?\r\n         <Cards cities={citiesInfo}/>:\r\n         null}      \r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n\r\nlet cityInfo=await infoWeather.data.map((el)=>{\r\n      return {\r\n        name:el.name,\r\n        id:el.id,\r\n        min:Math.round(el.main.temp_min),\r\n        max:Math.round(el.main.temp_max),\r\n        img:el.weather[0].icon\r\n      }\r\n    })\r\n    */"]},"metadata":{},"sourceType":"module"}